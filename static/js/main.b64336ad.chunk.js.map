{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAW,sDAAhB,UACD,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCaDK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACd,OACJ,8BAEAA,EAAOC,KAAK,SAACC,EAAMC,GACZ,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHVS,SCMAC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAY,MAAjB,SACA,uBAAOA,UAAY,wCACnBW,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCILI,EAVD,SAACC,GACX,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAArE,SACCJ,EAAMK,YCgDAC,G,wDA5CX,aAAgB,IAAD,8BACX,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAbxC,EAAKC,MAAO,CACXvB,OAAQ,GACRK,YAAa,IAJH,E,gEAQM,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACpB,OAAQ4B,S,+BAO9B,IAAD,EACwBC,KAAKN,MAA5BvB,EADD,EACCA,OAAQK,EADT,EACSA,YACTyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEzD,OAAQjC,EAAOmC,OAIP,sBAAKvC,UAAY,KAAjB,UACA,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAeuB,KAAKX,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAU8B,SAPrB,6C,GAzBGM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,EAAD,IAAOC,SAASC,eAAe,SAMjCX,M","file":"static/js/main.b64336ad.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = ({name, email, id}) => {\r\n\r\n    return(\r\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n       <img alt = 'robots' src={`https://robohash.org/${id}?200*200`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) => {\r\n     return (  \r\n <div>\r\n {\r\n robots.map ((user, i) => {\r\n        return (\r\n        <Card\r\n        key = {i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}/>\r\n );\r\n })\r\n }\r\n \r\n</div>\r\n\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n        <input className = 'pa3 ba b--light-green bg-ligtest-blue'\r\n        type = 'search' \r\n        placeholder = 'search robots'\r\n        onChange = {searchChange}\r\n        />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props) => {\r\n    return (\r\n        <div style ={{overflowY: 'scroll', border: '5px solid black', height:'500px'}}>\r\n        {props.children}\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n    \r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super ()\r\n        this.state= {\r\n         robots: [],\r\n         searchfield: ''\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>response.json())\r\n        .then(users =>this.setState({robots: users}));\r\n        }\r\n    \r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value})\r\n        \r\n    }\r\n    render () {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n               <h1>Loading</h1> :\r\n        \r\n           (\r\n                <div className = 'tc'>\r\n                <h1 className = 'f1'>RoboFriends</h1>\r\n                <SearchBox searchChange= {this.onSearchChange}/>\r\n                <Scroll>\r\n                <CardList robots = {filteredRobots}/>\r\n                </Scroll>\r\n                </div>\r\n        \r\n            );\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <App/>,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}